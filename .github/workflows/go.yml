name: Go

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        go-version: [1.21, 1.22, 1.23, 1.24]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      - name: Run tests (excluding /examples) with coverage
        run: |
          go test -v -race -coverprofile=coverage.out -covermode=atomic $(go list ./... | grep -v '/examples')

      - name: Upload coverage to Codecov
        continue-on-error: true
        uses: codecov/codecov-action@v3.1.6
        with:
          file: ./coverage.out

  security:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Run gosec
        uses: securego/gosec@v2.22.0
        with:
          args: ./...
